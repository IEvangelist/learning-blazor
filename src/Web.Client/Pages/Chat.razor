<!--  Copyright (c) 2021 David Pine. All rights reserved.
      Licensed under the MIT License.
-->
@page "/chat/{room?}"
@attribute [Authorize]
@inherits LocalizableComponentBase<Chat>

<PageTitle>
    @Localizer["Chat"]
</PageTitle>

<AuthorizeView>
    @if (User is { Identity: { } } user)
{
    <div class="is-hidden">@user.Identity.Name</div>
}
</AuthorizeView>

    <div class="columns">
        <section class="column is-10 is-offset-1">
            <div class="field has-addons">
                <div class="control is-fullwidth has-icons-left">
                    <input class="input is-large" spellcheck="true"
                       type="text" placeholder=@Localizer["ChatMessage"]
                       @ref="_messageInput"
                       @bind-value="@_message"
                       @oninput="@InitiateDebounceUserIsTypingAsync"
                       @onkeyup="@OnKeyUpAsync"
                       autocomplete="off">
                    <span class="icon is-small is-left">
                        <i class="fas">💬</i>
                    </span>
                </div>
                <div class="control">
                    <a class="button is-info is-large" @onclick="@SendMessageAsync">
                        @Localizer["Send"]
                    </a>
                </div>
            </div>

            <article class="panel is-info has-dotnet-scrollbar">
                <p class="panel-heading has-text-left">
                    <span>
                        @Localizer["Messages"]
                        @if (_usersOnline is not null)
                    { 
                        <span class="pl-2">&bull;</span>
                        <span>@Localizer["UserInChatFormat", _usersOnline]</span>
                    }
                    </span>
                    <span class="is-pulled-right">
                    @if (TryGetUsersTypingText(out var text))
                {
                    MarkupString isTypingMarkup = new(text);
                    <span class="has-text-grey-light is-strobing">
                            @isTypingMarkup
                        </span>
                }
                </span>
            </p>

            @foreach (var (id, message) in _messages.Reverse())
        {
            <ChatMessageComponent Message=@message
                    IsEditable=@(OwnsMessage(message.UserName))
                    EditMessage=@OnEditMessageAsync />
        }
        </article>
    </section>
</div>
